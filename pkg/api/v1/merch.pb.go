// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: merch.proto

package merch

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	mi := &file_merch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{0}
}

type InfoResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Coins         int64                           `protobuf:"varint,1,opt,name=coins,proto3" json:"coins,omitempty"`
	Inventory     []*InfoResponseItem             `protobuf:"bytes,2,rep,name=inventory,proto3" json:"inventory,omitempty"`
	CoinHistory   *InfoResponseCoinHistoryMessage `protobuf:"bytes,3,opt,name=coinHistory,proto3" json:"coinHistory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	mi := &file_merch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{1}
}

func (x *InfoResponse) GetCoins() int64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *InfoResponse) GetInventory() []*InfoResponseItem {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *InfoResponse) GetCoinHistory() *InfoResponseCoinHistoryMessage {
	if x != nil {
		return x.CoinHistory
	}
	return nil
}

type SendCoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToUser        string                 `protobuf:"bytes,1,opt,name=toUser,proto3" json:"toUser,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCoinRequest) Reset() {
	*x = SendCoinRequest{}
	mi := &file_merch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCoinRequest) ProtoMessage() {}

func (x *SendCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCoinRequest.ProtoReflect.Descriptor instead.
func (*SendCoinRequest) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{2}
}

func (x *SendCoinRequest) GetToUser() string {
	if x != nil {
		return x.ToUser
	}
	return ""
}

func (x *SendCoinRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type BuyItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          string                 `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyItemRequest) Reset() {
	*x = BuyItemRequest{}
	mi := &file_merch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyItemRequest) ProtoMessage() {}

func (x *BuyItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyItemRequest.ProtoReflect.Descriptor instead.
func (*BuyItemRequest) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{3}
}

func (x *BuyItemRequest) GetItem() string {
	if x != nil {
		return x.Item
	}
	return ""
}

type AuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         string                 `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	mi := &file_merch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{4}
}

func (x *AuthRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *AuthRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_merch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{5}
}

func (x *AuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type InfoResponseCoinHistoryMessage struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Sent          []*InfoResponseCoinHistoryMessageSendCoinEntry    `protobuf:"bytes,1,rep,name=sent,proto3" json:"sent,omitempty"`
	Received      []*InfoResponseCoinHistoryMessageReceiveCoinEntry `protobuf:"bytes,2,rep,name=received,proto3" json:"received,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponseCoinHistoryMessage) Reset() {
	*x = InfoResponseCoinHistoryMessage{}
	mi := &file_merch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponseCoinHistoryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponseCoinHistoryMessage) ProtoMessage() {}

func (x *InfoResponseCoinHistoryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponseCoinHistoryMessage.ProtoReflect.Descriptor instead.
func (*InfoResponseCoinHistoryMessage) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{1, 0}
}

func (x *InfoResponseCoinHistoryMessage) GetSent() []*InfoResponseCoinHistoryMessageSendCoinEntry {
	if x != nil {
		return x.Sent
	}
	return nil
}

func (x *InfoResponseCoinHistoryMessage) GetReceived() []*InfoResponseCoinHistoryMessageReceiveCoinEntry {
	if x != nil {
		return x.Received
	}
	return nil
}

type InfoResponseItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Quantity      int64                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponseItem) Reset() {
	*x = InfoResponseItem{}
	mi := &file_merch_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponseItem) ProtoMessage() {}

func (x *InfoResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponseItem.ProtoReflect.Descriptor instead.
func (*InfoResponseItem) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{1, 1}
}

func (x *InfoResponseItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *InfoResponseItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type InfoResponseCoinHistoryMessageSendCoinEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToUser        string                 `protobuf:"bytes,1,opt,name=toUser,proto3" json:"toUser,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponseCoinHistoryMessageSendCoinEntry) Reset() {
	*x = InfoResponseCoinHistoryMessageSendCoinEntry{}
	mi := &file_merch_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponseCoinHistoryMessageSendCoinEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponseCoinHistoryMessageSendCoinEntry) ProtoMessage() {}

func (x *InfoResponseCoinHistoryMessageSendCoinEntry) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponseCoinHistoryMessageSendCoinEntry.ProtoReflect.Descriptor instead.
func (*InfoResponseCoinHistoryMessageSendCoinEntry) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *InfoResponseCoinHistoryMessageSendCoinEntry) GetToUser() string {
	if x != nil {
		return x.ToUser
	}
	return ""
}

func (x *InfoResponseCoinHistoryMessageSendCoinEntry) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type InfoResponseCoinHistoryMessageReceiveCoinEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUser      string                 `protobuf:"bytes,1,opt,name=fromUser,proto3" json:"fromUser,omitempty"`
	Amount        int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InfoResponseCoinHistoryMessageReceiveCoinEntry) Reset() {
	*x = InfoResponseCoinHistoryMessageReceiveCoinEntry{}
	mi := &file_merch_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoResponseCoinHistoryMessageReceiveCoinEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponseCoinHistoryMessageReceiveCoinEntry) ProtoMessage() {}

func (x *InfoResponseCoinHistoryMessageReceiveCoinEntry) ProtoReflect() protoreflect.Message {
	mi := &file_merch_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponseCoinHistoryMessageReceiveCoinEntry.ProtoReflect.Descriptor instead.
func (*InfoResponseCoinHistoryMessageReceiveCoinEntry) Descriptor() ([]byte, []int) {
	return file_merch_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *InfoResponseCoinHistoryMessageReceiveCoinEntry) GetFromUser() string {
	if x != nil {
		return x.FromUser
	}
	return ""
}

func (x *InfoResponseCoinHistoryMessageReceiveCoinEntry) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

var File_merch_proto protoreflect.FileDescriptor

var file_merch_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xb9, 0x04, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0xca, 0x02, 0x0a, 0x12, 0x63, 0x6f, 0x69, 0x6e, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a,
	0x04, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x5a,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x63, 0x6f, 0x69,
	0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x1a, 0x3f, 0x0a, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x46, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x36, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x4a, 0x0a, 0x0f, 0x53,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x51, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x03, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x08, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x24, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xea, 0x02, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x50, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x5b, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x69, 0x6e, 0x12, 0x58, 0x0a, 0x07, 0x42, 0x75, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x79, 0x2f, 0x7b, 0x69, 0x74, 0x65, 0x6d, 0x7d, 0x12, 0x53,
	0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x19, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x42, 0x6f, 0x74, 0x2d, 0x30, 0x2f, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_merch_proto_rawDescOnce sync.Once
	file_merch_proto_rawDescData []byte
)

func file_merch_proto_rawDescGZIP() []byte {
	file_merch_proto_rawDescOnce.Do(func() {
		file_merch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_merch_proto_rawDesc), len(file_merch_proto_rawDesc)))
	})
	return file_merch_proto_rawDescData
}

var file_merch_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_merch_proto_goTypes = []any{
	(*InfoRequest)(nil),                                    // 0: merch.api.v1.InfoRequest
	(*InfoResponse)(nil),                                   // 1: merch.api.v1.InfoResponse
	(*SendCoinRequest)(nil),                                // 2: merch.api.v1.SendCoinRequest
	(*BuyItemRequest)(nil),                                 // 3: merch.api.v1.BuyItemRequest
	(*AuthRequest)(nil),                                    // 4: merch.api.v1.AuthRequest
	(*AuthResponse)(nil),                                   // 5: merch.api.v1.AuthResponse
	(*InfoResponseCoinHistoryMessage)(nil),                 // 6: merch.api.v1.InfoResponse.coinHistoryMessage
	(*InfoResponseItem)(nil),                               // 7: merch.api.v1.InfoResponse.item
	(*InfoResponseCoinHistoryMessageSendCoinEntry)(nil),    // 8: merch.api.v1.InfoResponse.coinHistoryMessage.sendCoinEntry
	(*InfoResponseCoinHistoryMessageReceiveCoinEntry)(nil), // 9: merch.api.v1.InfoResponse.coinHistoryMessage.receiveCoinEntry
	(*emptypb.Empty)(nil),                                  // 10: google.protobuf.Empty
}
var file_merch_proto_depIdxs = []int32{
	7,  // 0: merch.api.v1.InfoResponse.inventory:type_name -> merch.api.v1.InfoResponse.item
	6,  // 1: merch.api.v1.InfoResponse.coinHistory:type_name -> merch.api.v1.InfoResponse.coinHistoryMessage
	8,  // 2: merch.api.v1.InfoResponse.coinHistoryMessage.sent:type_name -> merch.api.v1.InfoResponse.coinHistoryMessage.sendCoinEntry
	9,  // 3: merch.api.v1.InfoResponse.coinHistoryMessage.received:type_name -> merch.api.v1.InfoResponse.coinHistoryMessage.receiveCoinEntry
	0,  // 4: merch.api.v1.MerchStore.Info:input_type -> merch.api.v1.InfoRequest
	2,  // 5: merch.api.v1.MerchStore.SendCoin:input_type -> merch.api.v1.SendCoinRequest
	3,  // 6: merch.api.v1.MerchStore.BuyItem:input_type -> merch.api.v1.BuyItemRequest
	4,  // 7: merch.api.v1.MerchStore.Auth:input_type -> merch.api.v1.AuthRequest
	1,  // 8: merch.api.v1.MerchStore.Info:output_type -> merch.api.v1.InfoResponse
	10, // 9: merch.api.v1.MerchStore.SendCoin:output_type -> google.protobuf.Empty
	10, // 10: merch.api.v1.MerchStore.BuyItem:output_type -> google.protobuf.Empty
	5,  // 11: merch.api.v1.MerchStore.Auth:output_type -> merch.api.v1.AuthResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_merch_proto_init() }
func file_merch_proto_init() {
	if File_merch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_merch_proto_rawDesc), len(file_merch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_merch_proto_goTypes,
		DependencyIndexes: file_merch_proto_depIdxs,
		MessageInfos:      file_merch_proto_msgTypes,
	}.Build()
	File_merch_proto = out.File
	file_merch_proto_goTypes = nil
	file_merch_proto_depIdxs = nil
}
